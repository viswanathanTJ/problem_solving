# MAX LCM 
def gcd(x, y):
    while(y):
       x, y = y, x % y
    return x

n, l = int(input()), list(map(int, input().split()))
res = -1
for i in range(n-1):
    res = max(res, (l[i] * l[i+1]) // gcd(l[i], l[i+1]))
print(res)

#FIBONACCI VALUE
import math

def isPerfectSquare(x):
    s = int(math.sqrt(x))
    return s*s == x

def isFibonacci(n):
    return isPerfectSquare(5*n*n + 4) or isPerfectSquare(5*n*n - 4)

def fun(arr, n):
    count = 0
    for i in range(0, n):
        if (isFibonacci(arr[i]) == True):
            count = count + 1
    return count

n = int(input())
arr = []
for i in range(0, n):
    t = int(input())
    arr.append(t)
print(fun(arr, n))
